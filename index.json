[{"content":"Prasyarat Sudah terinstall prometheus dan grafana. Baca juga:\nInstall Prometheus dan Grafana\nInstall Alertmanager\nSetting Contact Point Setting contact point di dashboard grafana. Email address yang di isi pada contact point merupakan email address tujuan.\nSetting SMTP Tambahkan SMTP section pada konfigurasi file grafana.\nnano /etc/grafana/grafana.ini #... # Setting di bawah section [smtp] enabled = true host = smtp.gmail.com:587 user = your-email@gmail.com password = kdnjfoctswrpyanx from_address = your-email@gmail.com from_name = ginton #... Catatan:\nhost = mengirim notifikasi ke email menggunakan port 587\nuser = merupakan email address pengirim\npassword = merupakan password user email your-email@gmail.com dari setelah generate app password di settingan gmail\nGenerate password.\nAccount -\u0026gt; Manage your Google Account.\nSecurity.\n2-Step Verification and Scroll Down.\nApp passwords.\nselect app: Other (Custom name).\nGenerate.\nCopy password dan paste di section password [smtp].\nRestart service grafana.\nsystemctl restart grafana-server.service Verifikasi Send test notification apakah sudah berhasil atau belum.\n","permalink":"https://opstekel.github.io/posts/send-alert-ke-telegram/","summary":"Prasyarat Sudah terinstall prometheus dan grafana. Baca juga:\nInstall Prometheus dan Grafana\nInstall Alertmanager\nSetting Contact Point Setting contact point di dashboard grafana. Email address yang di isi pada contact point merupakan email address tujuan.\nSetting SMTP Tambahkan SMTP section pada konfigurasi file grafana.\nnano /etc/grafana/grafana.ini #... # Setting di bawah section [smtp] enabled = true host = smtp.gmail.com:587 user = your-email@gmail.com password = kdnjfoctswrpyanx from_address = your-email@gmail.com from_name = ginton #.","title":"Mengirim Notifikasi Alert ke Email"},{"content":"Pendahuluan Jika ingin notifikasi yang dikirim disertai dengan screenshot dari panel dashboard kita bisa mengaktifkannya dengan enable image renderer pada grafana. Perintah ini di jalankan di node grafana.\nEnable Image Renderer Plugin Enable grafana image renderer plugin dengan menggunakan command.\ngrafana-cli plugins install grafana-image-renderer Tambahkan section dibawah ke dalam file konfigurasi grafana.\nnano /etc/grafana/grafana.ini #... # Tambahkan line dibawah ini [unified_alerting.screenshots] capture = true ##... Install dependencies untuk menjalankan fungsi image renderer.\nUbuntu:\napt install libx11-6 libx11-xcb1 libxcomposite1 libxcursor1 libxdamage1 libxext6 libxfixes3 libxi6 libxrender1 libxtst6 libglib2.0-0 libnss3 libcups2 libdbus-1-3 libxss1 libxrandr2 libgtk-3-0 libasound2 libxcb-dri3-0 libgbm1 libxshmfence1 Debian 9:\napt install libx11 libcairo libcairo2 libxtst6 libxcomposite1 libx11-xcb1 libxcursor1 libxdamage1 libnss3 libcups libcups2 libxss libxss1 libxrandr2 libasound2 libatk1.0-0 libatk-bridge2.0-0 libpangocairo-1.0-0 libgtk-3-0 libgbm1 libxshmfence1 Debian 10:\napt install libxdamage1 libxext6 libxi6 libxtst6 libnss3 libcups2 libxss1 libxrandr2 libasound2 libatk1.0-0 libatk-bridge2.0-0 libpangocairo-1.0-0 libpango-1.0-0 libcairo2 libatspi2.0-0 libgtk3.0-cil libgdk3.0-cil libx11-xcb-dev libgbm1 libxshmfence1 Centos 7:\napt install libXcomposite libXdamage libXtst cups libXScrnSaver pango atk adwaita-cursor-theme adwaita-icon-theme at at-spi2-atk at-spi2-core cairo-gobject colord-libs dconf desktop-file-utils ed emacs-filesystem gdk-pixbuf2 glib-networking gnutls gsettings-desktop-schemas gtk-update-icon-cache gtk3 hicolor-icon-theme jasper-libs json-glib libappindicator-gtk3 libdbusmenu libdbusmenu-gtk3 libepoxy liberation-fonts liberation-narrow-fonts liberation-sans-fonts liberation-serif-fonts libgusb libindicator-gtk3 libmodman libproxy libsoup libwayland-cursor libwayland-egl libxkbcommon m4 mailx nettle patch psmisc redhat-lsb-core redhat-lsb-submod-security rest spax time trousers xdg-utils xkeyboard-config alsa-lib Centos 8:\napt install libXcomposite libXdamage libXtst cups libXScrnSaver pango atk adwaita-cursor-theme adwaita-icon-theme at at-spi2-atk at-spi2-core cairo-gobject colord-libs dconf desktop-file-utils ed emacs-filesystem gdk-pixbuf2 glib-networking gnutls gsettings-desktop-schemas gtk-update-icon-cache gtk3 hicolor-icon-theme jasper-libs json-glib libappindicator-gtk3 libdbusmenu libdbusmenu-gtk3 libepoxy liberation-fonts liberation-narrow-fonts liberation-sans-fonts liberation-serif-fonts libgusb libindicator-gtk3 libmodman libproxy libsoup libwayland-cursor libwayland-egl libxkbcommon m4 mailx nettle patch psmisc redhat-lsb-core redhat-lsb-submod-security rest spax time trousers xdg-utils xkeyboard-config alsa-lib libX11-xcb Buat alert seperti referensi berikut Create Alert\nKemudian test shutdown node atau vm.\nshutdown -h now maka notifikasi juga akan mengirimkan screenshot gambar dari panel dashboard.\n","permalink":"https://opstekel.github.io/posts/enable-image-renderer/","summary":"Pendahuluan Jika ingin notifikasi yang dikirim disertai dengan screenshot dari panel dashboard kita bisa mengaktifkannya dengan enable image renderer pada grafana. Perintah ini di jalankan di node grafana.\nEnable Image Renderer Plugin Enable grafana image renderer plugin dengan menggunakan command.\ngrafana-cli plugins install grafana-image-renderer Tambahkan section dibawah ke dalam file konfigurasi grafana.\nnano /etc/grafana/grafana.ini #... # Tambahkan line dibawah ini [unified_alerting.screenshots] capture = true ##... Install dependencies untuk menjalankan fungsi image renderer.","title":"Mengirim Notifikasi dengan Screenshot Image Dashboard"},{"content":"Add Datasource Toggle Menu -\u0026gt; Administrations -\u0026gt; Data Sources -\u0026gt; Add new data source -\u0026gt; prometheus.\nTambahkan data source prometheus dengan IP node prometheus.\nCreate Dashboard Toggle Menu -\u0026gt; Dashboards -\u0026gt; Go To Folder -\u0026gt; Create Dashboard -\u0026gt; Add Visualization\nEdit dashboard seperti gambar dibawah (total node yang aktif) lalu save.\nCreate Alert Membuat alert ketika ada node yang tidak aktif maka akan mengirim notifikasi ke telegram.\nStep 1: Create alert pada panel dashboard.\nBuat rule B untuk mengambil nilai terakhir dari rule A. Kemudian rule C untuk menentukan jika nilai dari node yang up (rule B) kurang dari 2 maka ada node down yang akan trigger alert untuk mengirimkan notifikasi.\nevaluation interval berfungsi untuk melakukan pengecekan aturan rule secara berkala apakah memenuhi kondisi atau tidak. Jika diatur evaluation interval ke 1 menit, grafana akan memeriksa kondisi alert setiap menit.\nfor 2m adalah untuk menentukan berapa lama suatu kondisi harus dipertahankan sebelum alert dikirimkan, Jika diatur for selama 2m maka kondisi nilai akan dipertahankan selama 2 menit jika benar selama 2 menit kondisi nya memenuhi kondisi alert maka akan mengirim notifikasi ke telegram. for digunakan untuk menghilangkan pemberitahuan palsu atau flapping (pemberitahuan yang berulang kali dikirimkan secara berulang dalam periode waktu yang singkat) yang dapat terjadi ketika metrik melonjak naik dan turun dengan cepat.\nlabels juga penting untuk notification policies tau bahwa alert rule mana akan dikirimkan kemana.\nStep 2: Buat contact points ke telegram. Isikan token bot API telegram dan chat ID telegram.\nNote: untuk mencari chat ID telegram bisa dengan: https://api.telegram.org/bot(token)/getUpdates\nStep 3: Buat notification policies, isi label sesuai dengan label di alert rule dan pilih contact points yang sudah kita buat.\nVerifikasi Matikan salah satu instance atau vm node exporter.\nshutdown -h now Periksa kembali 1 sampai 2 menit status alert rule akan berubah menjadi pending kemudian firing.\nKemudian mengirimkan notifikasi ke telegram.\n","permalink":"https://opstekel.github.io/posts/membuat-dashboard-dan-alert/","summary":"Add Datasource Toggle Menu -\u0026gt; Administrations -\u0026gt; Data Sources -\u0026gt; Add new data source -\u0026gt; prometheus.\nTambahkan data source prometheus dengan IP node prometheus.\nCreate Dashboard Toggle Menu -\u0026gt; Dashboards -\u0026gt; Go To Folder -\u0026gt; Create Dashboard -\u0026gt; Add Visualization\nEdit dashboard seperti gambar dibawah (total node yang aktif) lalu save.\nCreate Alert Membuat alert ketika ada node yang tidak aktif maka akan mengirim notifikasi ke telegram.\nStep 1: Create alert pada panel dashboard.","title":"Membuat Dashboard dan Mengirim Notifikasi ke Telegram"},{"content":"Pendahuluan AlertManager adalah salah satu komponen utama dalam sistem pemantauan prometheus. Prometheus digunakan untuk mengumpulkan dan menyimpan metrik real time dari sistem yang sedang dimonitoring, sementara alertmanager bertanggung jawab untuk mengelola dan mengirimkan notifikasi atau peringatan (alert) berdasarkan kondisi tertentu.\nAlertManager bisa di install di node terpisah dengan prometheus dan grafana, namun pada contoh ini alertmanager di install di node prometheus dan grafana. Sebelum melanjutkan lebih baik membaca terlebih dahulu install-prometheus-grafana\nInstall AlertManager Download dan install alertmanager.\nwget https://github.com/prometheus/alertmanager/releases/download/v0.25.0/alertmanager-0.25.0.linux-amd64.tar.gz tar xvf alertmanager-0.25.0.linux-amd64.tar.gz cd alertmanager-0.25.0.linux-amd64/ mkdir /etc/alertmanager cp alertmanager.yml /etc/alertmanager/ cp alertmanager amtool /usr/local/bin/ Buat service alertmanager.\nnano /etc/systemd/system/alertmanager.service #... [Unit] Description=AlertManager Server Service Wants=network-online.target After=network-online.target [Service] User=root Group=root Type=simple ExecStart=/usr/local/bin/alertmanager --config.file /etc/alertmanager/alertmanager.yml --web.external-url=http://\u0026lt;ip-node-alertmanager\u0026gt;:9093 [Install] WantedBy=multi-user.target #... Edit file konfigurasi alertmanager\nnano /etc/alertmanager/alertmanager.yml #... global: resolve_timeout: 5m route: group_by: [\u0026#39;alertname\u0026#39;] receiver: slack_general routes: - match: severity: slack receiver: slack_general receivers: - name: slack_general slack_configs: # Setting slack agar enable incoming webhooks dan copy url ke bawah ini (optional). - api_url: \u0026#39;https://hooks.slack.com/services/\u0026lt;incoming-web-hooks-service\u0026gt;\u0026#39; channel: \u0026#39;#alert\u0026#39; icon_url: https://avatars3.githubusercontent.com/u/3380462 title: |- [{{ .Status | toUpper }}{{ if eq .Status \u0026#34;firing\u0026#34; }}:{{ .Alerts.Firing | len }}{{ end }}] {{ .CommonLabels.alertname }} for {{ .CommonLabels.job }} {{- if gt (len .CommonLabels) (len .GroupLabels) -}} {{\u0026#34; \u0026#34;}}( {{- with .CommonLabels.Remove .GroupLabels.Names }} {{- range $index, $label := .SortedPairs -}} {{ if $index }}, {{ end }} {{- $label.Name }}=\u0026#34;{{ $label.Value -}}\u0026#34; {{- end }} {{- end -}} ) {{- end }} text: \u0026gt;- {{ range .Alerts -}} *Alert:* {{ .Annotations.title }}{{ if .Labels.severity }} - `{{ .Labels.severity }}`{{ end }} *Description:* {{ .Annotations.description }} *Details:* {{ range .Labels.SortedPairs }} • *{{ .Name }}:* `{{ .Value }}` {{ end }} {{ end }} inhibit_rules: - source_match: severity: \u0026#39;critical\u0026#39; target_match: severity: \u0026#39;warning\u0026#39; equal: [\u0026#39;alertname\u0026#39;, \u0026#39;dev\u0026#39;, \u0026#39;instance\u0026#39;] #... Restart service alertmanager.\nsystemctl daemon-reload systemctl restart alertmanager.service systemctl enable alertmanager.service systemctl status alertmanager.service Cek listen port alertmanager\nss -tunlp |grep 9093 Akses dashboard alertmanager, ip-alertmanager:9093.\nIntegrasi alertmanager dengan prometheus. Kita perlu menambahkan alerting di konfigurasi prometheus.\nDi node prometheus, tambahkan:\nnano /etc/prometheus/prometheus.yml #... global: scrape_interval: 15s evaluation_interval: 15s scrape_timeout: 10s # Tambahkan line di bawah ini alerting: alertmanagers: - static_configs: - targets: - 172.18.251.30:9093 #... Restart service prometheus.\nsystemctl restart prometheus.service ","permalink":"https://opstekel.github.io/posts/install-alertmanager/","summary":"Pendahuluan AlertManager adalah salah satu komponen utama dalam sistem pemantauan prometheus. Prometheus digunakan untuk mengumpulkan dan menyimpan metrik real time dari sistem yang sedang dimonitoring, sementara alertmanager bertanggung jawab untuk mengelola dan mengirimkan notifikasi atau peringatan (alert) berdasarkan kondisi tertentu.\nAlertManager bisa di install di node terpisah dengan prometheus dan grafana, namun pada contoh ini alertmanager di install di node prometheus dan grafana. Sebelum melanjutkan lebih baik membaca terlebih dahulu install-prometheus-grafana","title":"Install AlertManager"},{"content":"Topologi Install Node Exporter Node exporter adalah aplikasi yang digunakan untuk mengekspor metrik dari sebuah sistem atau node ke dalam format yang dapat digunakan oleh sistem monitoring seperti prometheus. Node exporter berfungsi sebagai agen yang diinstall pada setiap node atau VM yang ingin di monitoring.\nBuat user node_exporter untuk menjalankan service node exporter.\nuseradd --no-create-home --shell /bin/false node_exporter Download dan install packages node exporter.\nwget https://github.com/prometheus/node_exporter/releases/download/v1.5.0/node_exporter-1.5.0.linux-amd64.tar.gz tar xvf node_exporter-1.5.0.linux-amd64 cd node_exporter-1.5.0.linux-amd64/ chown node_exporter:node_exporter node_exporter cp node_exporter /usr/local/bin/ Untuk melihat collectors node exporter jalankan.\nroot@lab-node-exporter-1:~# node_exporter Buat service node exporter.\nnano /etc/systemd/system/node_exporter.service #... [Unit] Description=Node Exporter [Service] User=node_exporter Type=simple ExecStart=/usr/local/bin/node_exporter --collector.systemd --collector.cpu --collector.meminfo --collector.loadavg --collector.uname \\ --collector.stat --collector.filesystem --collector.netstat Restart=on-failure RestartSec=5 [Install] WantedBy=multi-user.target #... Restart service node exporter.\nsystemd daemon-reload systemctl restart node_exporter.service systemctl enable node_exporter.service systemctl status node_exporter.service Cek listen port dari node exporter.\nss -tunlp |grep 9100 Check metrics node exporter.\ncurl http://\u0026lt;ip-node-exporter\u0026gt;:9100/metrics Install Prometheus Prometheus adalah sistem monitoring open source yang dirancang khusus untuk memantau dan mengumpulkan data metrik dari berbagai sistem dan layanan.\nBuat user prometheus untuk menjalankan service prometheus.\nuseradd --no-create-home --shell /bin/false prometheus Download dan installl packages prometheus.\nwget https://github.com/prometheus/prometheus/releases/download/v2.44.0/prometheus-2.44.0.linux-amd64.tar.gz tar xvf prometheus-2.44.0.linux-amd64.tar.gz cd prometheus-2.44.0.linux-amd64/ chown -r prometheus:prometheus prometheus promtool console_libraries consoles prometheus.yml cp prometheus promtool /usr/local/bin mkdir /var/lib/prometheus mkdir /etc/prometheus cp -r console_libraries console prometheus.yml /etc/prometheus/ Edit file konfigurasi prometheus.\nnano /etc/prometheus/prometheus.yml #... global: scrape_interval: 15s evaluation_interval: 15s scrape_timeout: 10s scrape_configs: - job_name: \u0026#34;prometheus\u0026#34; metrics_path: /metrics scheme: http honor_timestamps: true static_configs: - targets: [\u0026#34;172.18.251.30:9090\u0026#34;] - job_name: \u0026#34;node-exporter\u0026#34; metrics_path: /metrics scheme: http honor_timestamps: true static_configs: - targets: - 172.18.251.11:9100 - 172.18.251.12:9100 #... Buat service prometheus.\nnano /etc/systemd/system/prometheus/prometheus.service #... [Unit] Description=Prometheus Server [Service] User=prometheus Group=prometheus Type=simple ExecStart=/usr/local/bin/prometheus --config.file=/etc/prometheus/prometheus.yml \\ --storage.tsdb.path=/var/lib/prometheus/ --web.external-url=http://172.18.251.30:9090 --storage.tsdb.max-block-duration=2h \\ --storage.tsdb.min-block-duration=2h --storage.tsdb.retention.time=365d --storage.tsdb.wal-compression --web.enable-lifecycle \\ --web.enable-admin-api --log.level=debug --web.console.templates=/etc/prometheus/consoles --web.console.libraries=/etc/prometheus/console_libraries [Install] WantedBy=multi-user.target #... Lakukan pengecekan apakah konfigurasi file prometheus sudah valid.\npromtool check config /etc/prometheus/prometheus.yml Restart service prometheus.\nsystemctl daemon-reload systemctl restart prometheus.service systemctl enable prometheus.service systemctl status prometheus.service Cek versi prometeheus.\npromtool --version Cek listen port prometheus.\nss -tunlp |grep 9090 Apakah ada jobs yang running.\npromtool query instant \u0026#39;http://\u0026lt;ip-prometheus\u0026gt;:9090\u0026#39; \u0026#39;up==1\u0026#39; Akses dashboard prometheus.\nInstall Grafana Grafana adalah software open source yang digunakan untuk membuat visualisasi atau dashboard monitoring dari metrics yang sudah di kumpulkan oleh prometheus.\nInstall dependencies packages grafana.\napt update apt-get install -y gnupg2 curl software-properties-common Tambahkan repository.\ncurl https://packages.grafana.com/gpg.key | sudo apt-key add - add-apt-repository \u0026#34;deb https://packages.grafana.com/oss/deb stable main\u0026#34; apt update Install grafana.\napt-cache policy grafana apt -y install grafana=9.5.2 Restart service grafana.\nsystemctl enable grafana-server.service systemctl restart grafana-server.service systemctl status grafana-server.service Cek versi grafana.\ngrafana-cli --version Cek listen port grafana.\nss -tunlp |grep 3000 Akses dashboard grafana.\n","permalink":"https://opstekel.github.io/posts/install-prometheus-grafana/","summary":"Topologi Install Node Exporter Node exporter adalah aplikasi yang digunakan untuk mengekspor metrik dari sebuah sistem atau node ke dalam format yang dapat digunakan oleh sistem monitoring seperti prometheus. Node exporter berfungsi sebagai agen yang diinstall pada setiap node atau VM yang ingin di monitoring.\nBuat user node_exporter untuk menjalankan service node exporter.\nuseradd --no-create-home --shell /bin/false node_exporter Download dan install packages node exporter.\nwget https://github.com/prometheus/node_exporter/releases/download/v1.5.0/node_exporter-1.5.0.linux-amd64.tar.gz tar xvf node_exporter-1.5.0.linux-amd64 cd node_exporter-1.","title":"Install Prometheus dan Grafana"}]